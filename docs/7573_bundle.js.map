{"version":3,"sources":["webpack:///./sources/game/scripts/systems/common/parallax.js"],"names":["parallax","entities","Object","entries","forEach","entity","cameraComponent","get","getCamera","cameraName","cameraRefName","cameraRef","direction","init","x","position","y","factor","images","sprites","parts","values","image","source","sourceImg","assets","scope","file","size","naturalWidth","naturalHeight","shift","sprite","spritesDef","imageSrc"],"mappings":"2OAEA,SAASA,EAASC,GAAU,WAC1BC,OAAOC,QAAQF,GAAUG,SAAQ,YAAoB,I,IAAA,G,EAAA,E,4CAAA,I,owBAAZC,GAAY,WAC7CC,EAAkBD,EAAOE,IAAI,UAE7BP,GADeQ,UAAe,EAAMF,EAAgBG,YACzCJ,EAAOE,IAAI,aACtBG,EAAgBV,EAASW,UACzBA,EAAYH,UAAe,EAAME,GAC/BE,EAAcZ,EAAdY,UACHZ,EAASa,OACZb,EAASa,KAAO,CAAEC,EAAGH,EAAUI,SAASD,IAAKE,EAAGL,EAAUI,SAASC,MAErEhB,EAASiB,OAAS,CAChBH,EAAId,EAASa,KAAKC,EAAIH,EAAUI,SAASD,IACzCE,EAAIhB,EAASa,KAAKG,EAAIL,EAAUI,SAASC,KAG3C,IAAME,EAASb,EAAOE,IAAI,UAClBY,EAAUd,EAAOE,IAAI,WACzBW,GAAUA,EAAOE,MACnBlB,OAAOmB,OAAOH,EAAOE,OAAOhB,SAAQ,SAACkB,GAAU,IAE3CC,EACED,EADFC,OAGIC,EAAY,EAAKC,OAAOP,OAAOK,EAAOG,OAAOH,EAAOI,QAE7CL,EAAMM,OACVJ,EAAUK,aAAsBL,EAAUM,eAGnDR,EAAMS,MAAMjB,EAAIF,EAAUE,GAAKd,EAASiB,OAAOH,EAAI,IACnDQ,EAAMS,MAAMf,EAAIJ,EAAUI,GAAKhB,EAASiB,OAAOD,EAAI,OAE9CG,GAAWA,EAAQC,OAC1BlB,OAAOmB,OAAOF,EAAQC,OAAOhB,SAAQ,SAAC4B,GAGhCA,EADFT,OAF6C,IAIzCU,EAAa,EAAKd,QAAQa,EAAOT,UACjCW,EAAW,EAAKT,OAAOP,OAAOe,EAAWP,OAAOO,EAAWN,QAEpDK,EAAOJ,OACXM,EAASL,aAAsBK,EAASJ,eAGjDE,EAAOD,MAAMjB,EAAIF,EAAUE,GAAKd,EAASiB,OAAOH,EAAI,IACpDkB,EAAOD,MAAMf,EAAIJ,EAAUI,GAAKhB,EAASiB,OAAOD,EAAI","file":"7573_bundle.js","sourcesContent":["import { getCamera } from 'core/loadCameras';\n\nfunction parallax(entities) {\n  Object.entries(entities).forEach(([name, entity]) => {\n    const cameraComponent = entity.get('camera');\n    const cameraEntity = getCamera.call(this, cameraComponent.cameraName);\n    const parallax = entity.get('parallax');\n    const cameraRefName = parallax.cameraRef;\n    const cameraRef = getCamera.call(this, cameraRefName);\n    const { direction } = parallax;\n    if (!parallax.init) {\n      parallax.init = { x: cameraRef.position.x(), y: cameraRef.position.y() };\n    }\n    parallax.factor = {\n      x: (parallax.init.x - cameraRef.position.x()),\n      y: (parallax.init.y - cameraRef.position.y()),\n    };\n\n    const images = entity.get('images');\n      const sprites = entity.get('sprites');\n    if (images && images.parts) {\n      Object.values(images.parts).forEach((image) => {\n        const {\n          source,\n        } = image;\n\n        const sourceImg = this.assets.images[source.scope][source.file]();\n\n        const size = image.size || {\n          width: sourceImg.naturalWidth, height: sourceImg.naturalHeight,\n        };\n\n        image.shift.x = direction.x * (parallax.factor.x / 10);\n        image.shift.y = direction.y * (parallax.factor.y / 10);\n      });\n    }else if(sprites && sprites.parts){\n      Object.values(sprites.parts).forEach((sprite) => {\n        const {\n          source,\n        } = sprite;\n        const spritesDef = this.sprites[sprite.source]();\n        const imageSrc = this.assets.images[spritesDef.scope][spritesDef.file]();\n\n        const size = sprite.size || {\n          width: imageSrc.naturalWidth, height: imageSrc.naturalHeight,\n        };\n\n        sprite.shift.x = direction.x * (parallax.factor.x / 10);\n        sprite.shift.y = direction.y * (parallax.factor.y / 10);\n      });\n    }\n  });\n}\n\nexport { parallax };\n"],"sourceRoot":""}