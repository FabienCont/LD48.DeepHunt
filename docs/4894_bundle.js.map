{"version":3,"sources":["webpack:///./sources/game/scripts/systems/common/sprites.js"],"names":["sprites","entities","Object","values","forEach","entity","cameraComponent","get","camera","getCamera","cameraName","spritesComponent","positionComponent","rotateComponent","rotateX","rotateY","rotateZ","x","y","z","parts","sprite","spritesDef","source","imageSrc","assets","images","scope","file","frame","animation","frames","width","height","shift","destination","size","naturalWidth","naturalHeight","add","spriteName","rotate","shiftX","shiftY","opacity"],"mappings":"gIAEA,SAASA,EAAQC,GAAU,WACzBC,OAAOC,OAAOF,GAAUG,SAAQ,SAACC,GAC/B,IAAMC,EAAkBD,EAAOE,IAAI,UAC7BC,EAASC,UAAe,EAAMH,EAAgBI,YAC9CC,EAAmBN,EAAOE,IAAI,WAC9BK,EAAoBP,EAAOE,IAAI,YAC/BM,EAAkBR,EAAOE,IAAI,UAE/BO,EAAU,EACVC,EAAU,EACVC,EAAU,EACVH,IACFC,EAAUD,EAAgBI,EAC1BF,EAAUF,EAAgBK,EAC1BF,EAAUH,EAAgBM,GAG5BjB,OAAOC,OAAOQ,EAAiBS,OAAOhB,SAAQ,SAACiB,GAC7C,IAAMC,EAAa,EAAKtB,QAAQqB,EAAOE,UACjCC,EAAW,EAAKC,OAAOC,OAAOJ,EAAWK,OAAOL,EAAWM,QAEzDC,EAAUR,EAAOS,UAAjBD,MAJgD,EAQpDP,EAAWS,OAAOF,GADpBZ,EAPsD,EAOtDA,EAAGC,EAPmD,EAOnDA,EAAGc,EAPgD,EAOhDA,MAAOC,EAPyC,EAOzCA,OAETC,EAAQb,EAAOa,OAAS,CAC5BjB,EAAG,EAAGC,EAAG,GAGLiB,EAAcd,EAAOc,aAAe,CACxClB,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAGXiB,EAAOf,EAAOe,MAAQ,CAC1BJ,MAAOR,EAASa,aAAcJ,OAAQT,EAASc,eAGjD9B,EAAO+B,IAAI,SAAU,CACnBC,WAAY,WAAF,OAAanB,EAAOE,OAApB,YAA8BM,GACxCY,OAAQ,CACNxB,EAAGH,EACHI,EAAGH,EACHI,EAAGH,GAELO,OAAQC,EACRK,MAAO,CACLZ,IACAC,EACAc,QACAC,UAEFC,MAAO,CACLjB,EAAGiB,EAAMjB,EACTC,EAAGgB,EAAMhB,GAEXiB,YAAa,CACXO,OAAQ,EACRC,OAAQ,EACR1B,EAAIL,EAAkBK,EAAIkB,EAAYlB,EAAImB,EAAKJ,MAAQ,EACvDd,EAAIN,EAAkBM,EAAIiB,EAAYjB,EAAIkB,EAAKH,OAAS,EACxDd,EAAGP,EAAkBO,EAAIgB,EAAYhB,EACrCa,MAAQI,EAAKJ,MACbC,OAASG,EAAKH,QAEhBW,QAAStC,EAAgBsC,QAAUvB,EAAOuB","file":"4894_bundle.js","sourcesContent":["import { getCamera } from 'core/loadCameras';\n\nfunction sprites(entities) {\n  Object.values(entities).forEach((entity) => {\n    const cameraComponent = entity.get('camera');\n    const camera = getCamera.call(this, cameraComponent.cameraName);\n    const spritesComponent = entity.get('sprites');\n    const positionComponent = entity.get('position');\n    const rotateComponent = entity.get('rotate');\n\n    let rotateX = 0;\n    let rotateY = 0;\n    let rotateZ = 0;\n    if (rotateComponent) {\n      rotateX = rotateComponent.x;\n      rotateY = rotateComponent.y;\n      rotateZ = rotateComponent.z;\n    }\n\n    Object.values(spritesComponent.parts).forEach((sprite) => {\n      const spritesDef = this.sprites[sprite.source]();\n      const imageSrc = this.assets.images[spritesDef.scope][spritesDef.file]();\n\n      const { frame } = sprite.animation;\n\n      const {\n        x, y, width, height,\n      } = spritesDef.frames[frame];\n      const shift = sprite.shift || {\n        x: 0, y: 0,\n      };\n\n      const destination = sprite.destination || {\n        x: 0, y: 0, z: 0,\n      };\n\n      const size = sprite.size || {\n        width: imageSrc.naturalWidth, height: imageSrc.naturalHeight,\n      };\n\n      camera.add('images', {\n        spriteName: `_sprite_${sprite.source}_${frame}`,\n        rotate: {\n          x: rotateX,\n          y: rotateY,\n          z: rotateZ,\n        },\n        source: imageSrc,\n        frame: {\n          x,\n          y,\n          width,\n          height,\n        },\n        shift: {\n          x: shift.x,\n          y: shift.y,\n        },\n        destination: {\n          shiftX: 0,\n          shiftY: 0,\n          x: (positionComponent.x + destination.x - size.width / 2),\n          y: (positionComponent.y + destination.y - size.height / 2),\n          z: positionComponent.z + destination.z,\n          width: (size.width),\n          height: (size.height),\n        },\n        opacity: cameraComponent.opacity * sprite.opacity,\n      });\n    });\n  });\n}\n\nexport { sprites };\n"],"sourceRoot":""}