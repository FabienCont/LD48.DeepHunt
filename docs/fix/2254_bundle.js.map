{"version":3,"sources":["webpack:///./sources/game/scripts/systems/editor/sprites.js"],"names":["sprites","entities","Object","values","forEach","entity","cameraComponent","get","spritesComponent","positionComponent","rotateComponent","rotateX","rotateY","rotateZ","x","y","z","parts","sprite","spritesDef","source","opacity","frames","animation","frame","width","height","destination","shift","imageSrc","assets","images","scope","file","size","naturalWidth","naturalHeight","$cameras","debug","add","spriteName","rotate","err"],"mappings":"oFAAA,SAASA,EAAQC,GAAU,WACzBC,OAAOC,OAAOF,GAAUG,SAAQ,SAACC,GAC/B,IAAMC,EAAkBD,EAAOE,IAAI,UAC7BC,EAAmBH,EAAOE,IAAI,WAC9BE,EAAoBJ,EAAOE,IAAI,YAC/BG,EAAkBL,EAAOE,IAAI,UAE/BI,EAAU,EACVC,EAAU,EACVC,EAAU,EACVH,IACFC,EAAUD,EAAgBI,EAC1BF,EAAUF,EAAgBK,EAC1BF,EAAUH,EAAgBM,GAG5Bd,OAAOC,OAAOK,EAAiBS,OAAOb,SAAQ,SAACc,GAC7C,IACE,IAAMC,EAAa,EAAKnB,QAAQkB,EAAOE,UAE/BC,EAAYH,EAAZG,QAHN,EAMEF,EAAWG,OAAOJ,EAAOK,UAAUC,OADrCV,EALA,EAKAA,EAAGC,EALH,EAKGA,EAAGU,EALN,EAKMA,MAAOC,EALb,EAKaA,OAGTC,EAAcT,EAAOS,aAAe,CACxCb,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAEXY,EAAQV,EAAOU,OAAS,CAC5Bd,EAAG,EAAGC,EAAG,GAGLc,EAAW,EAAKC,OAAOC,OAAOZ,EAAWa,OAAOb,EAAWc,QAE3DC,EAAOhB,EAAOgB,MAAQ,CAC1BT,MAAOI,EAASM,aAAcT,OAAQG,EAASO,eAGjD,EAAKC,SAASC,MAAMC,IAAI,SAAU,CAChCC,WAAY,WAAF,OAAatB,EAAOE,OAApB,YAA8BF,EAAOK,UAAUC,OACzDiB,OAAQ,CACN3B,EAAGH,EACHI,EAAGH,EACHI,EAAGH,GAELe,MAAO,CACLd,EAAGc,EAAMd,EACTC,EAAGa,EAAMb,GAEXK,OAAQS,EACRL,MAAO,CACLV,IACAC,EACAU,QACAC,UAEFC,YAAa,CACXb,EAAIL,EAAkBK,EAAIa,EAAYb,EAAIoB,EAAKT,MAAQ,EACvDV,EAAIN,EAAkBM,EAAIY,EAAYZ,EAAImB,EAAKR,OAAS,EACxDV,EAAGP,EAAkBO,EAAIW,EAAYX,EACrCS,MAAQS,EAAKT,MACbC,OAASQ,EAAKR,QAEhBL,QAASf,EAAgBe,QAAUA,IAErC,MAAOqB,W","file":"2254_bundle.js","sourcesContent":["function sprites(entities) {\n  Object.values(entities).forEach((entity) => {\n    const cameraComponent = entity.get('camera');\n    const spritesComponent = entity.get('sprites');\n    const positionComponent = entity.get('position');\n    const rotateComponent = entity.get('rotate');\n\n    let rotateX = 0;\n    let rotateY = 0;\n    let rotateZ = 0;\n    if (rotateComponent) {\n      rotateX = rotateComponent.x;\n      rotateY = rotateComponent.y;\n      rotateZ = rotateComponent.z;\n    }\n\n    Object.values(spritesComponent.parts).forEach((sprite) => {\n      try {\n        const spritesDef = this.sprites[sprite.source]();\n\n        const { opacity } = sprite;\n        const {\n          x, y, width, height,\n        } = spritesDef.frames[sprite.animation.frame];\n\n        const destination = sprite.destination || {\n          x: 0, y: 0, z: 0,\n        };\n        const shift = sprite.shift || {\n          x: 0, y: 0,\n        };\n\n        const imageSrc = this.assets.images[spritesDef.scope][spritesDef.file]();\n\n        const size = sprite.size || {\n          width: imageSrc.naturalWidth, height: imageSrc.naturalHeight,\n        };\n\n        this.$cameras.debug.add('images', {\n          spriteName: `_sprite_${sprite.source}_${sprite.animation.frame}`,\n          rotate: {\n            x: rotateX,\n            y: rotateY,\n            z: rotateZ,\n          },\n          shift: {\n            x: shift.x,\n            y: shift.y,\n          },\n          source: imageSrc,\n          frame: {\n            x,\n            y,\n            width,\n            height,\n          },\n          destination: {\n            x: (positionComponent.x + destination.x - size.width / 2),\n            y: (positionComponent.y + destination.y - size.height / 2),\n            z: positionComponent.z + destination.z,\n            width: (size.width),\n            height: (size.height),\n          },\n          opacity: cameraComponent.opacity * opacity,\n        });\n      } catch (err) {\n      }\n    });\n  });\n}\n\nexport { sprites };\n"],"sourceRoot":""}