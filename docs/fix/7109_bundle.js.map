{"version":3,"sources":["webpack:///./sources/game/scripts/systems/editor/showCameras.js","webpack:///./sources/theatre/modules/shape.js"],"names":["showCameras","entities","this","$variables","$debug","cameras","context","save","lineWidth","strokeStyle","Object","entries","forEach","camera","$debugCamera","$cameras","debug","cameraRect","Rectangle","screen","x","position","size","width","scale","y","height","strokeRect","restore","Point"],"mappings":"6OAEA,SAASA,EAAYC,GAAU,WACzBC,KAAKC,WAAWC,OAAOC,UACzBH,KAAKI,QAAQC,OAIbL,KAAKI,QAAQE,UAFC,EAIdN,KAAKI,QAAQG,YAAc,UACVC,OAAOC,QAAQT,KAAKC,WAAWC,OAAOC,SAASO,SAAQ,YAAoB,I,IAAA,G,EAAA,E,4CAAA,I,owBAAZC,GAAY,WACpFC,EAAe,EAAKC,SAASC,MAE7BC,EAAa,IAAIC,KACrBJ,EAAaK,OAAOC,KAAOP,EAAOQ,SAASD,IAAMP,EAAOS,KAAKC,QAAU,GAAKT,EAAaK,OAAOK,SAAWV,EAAaO,SAASD,IAAMN,EAAaK,OAAOK,QAAUV,EAAaK,OAAOI,QAAU,GACnMT,EAAaK,OAAOM,KAAOZ,EAAOQ,SAASI,IAAMZ,EAAOS,KAAKI,SAAW,GAAKZ,EAAaK,OAAOK,SAAWV,EAAaO,SAASI,IAAMX,EAAaK,OAAOK,QAAUV,EAAaK,OAAOO,SAAW,GACpMb,EAAOM,OAAOI,QAAUV,EAAOM,OAAOK,QAAWV,EAAaK,OAAOK,QACrEX,EAAOM,OAAOO,SAAWb,EAAOM,OAAOK,QAAWV,EAAaK,OAAOK,SAGzE,EAAKlB,QAAQqB,WAAWV,EAAWG,EAdtBG,EAckCN,EAAWQ,EAd7CF,EAcyDN,EAAWM,MAfrE,EAeoFN,EAAWS,OAf/F,MAkBdxB,KAAKI,QAAQsB,a,2BCjBjB,SAASC,EAAMT,EAAGK,GAEdvB,KAAKkB,EAAIA,EACTlB,KAAKuB,EAAIA,EAGb,SAASP,EAAUE,EAAGK,EAAGF,EAAOG,GAE5BxB,KAAKwB,OAASA,EACdxB,KAAKqB,MAAQA,EACbrB,KAAKkB,EAAIA,EACTlB,KAAKuB,EAAIA,E","file":"7109_bundle.js","sourcesContent":["import { Rectangle } from 'modules/shape.js';\n\nfunction showCameras(entities) {\n  if (this.$variables.$debug.cameras) {\n    this.context.save();\n\n    const width = 2;\n    const offset = width / 2;\n    this.context.lineWidth = width;\n\n    this.context.strokeStyle = '#639bff';\n    const $cameras = Object.entries(this.$variables.$debug.cameras).forEach(([name, camera]) => {\n      const $debugCamera = this.$cameras.debug;\n\n      const cameraRect = new Rectangle(\n        $debugCamera.screen.x() + (camera.position.x() - camera.size.width() / 2) * $debugCamera.screen.scale() - ($debugCamera.position.x() * $debugCamera.screen.scale() - $debugCamera.screen.width() / 2),\n        $debugCamera.screen.y() + (camera.position.y() - camera.size.height() / 2) * $debugCamera.screen.scale() - ($debugCamera.position.y() * $debugCamera.screen.scale() - $debugCamera.screen.height() / 2),\n        (camera.screen.width() / camera.screen.scale()) * $debugCamera.screen.scale(),\n        (camera.screen.height() / camera.screen.scale()) * $debugCamera.screen.scale(),\n      );\n\n      this.context.strokeRect(cameraRect.x + offset, cameraRect.y + offset, cameraRect.width - width, cameraRect.height - width);\n    });\n\n    this.context.restore();\n  }\n}\n\nexport { showCameras };\n","function Circle(x, y, radius) {\n\n    this.radius = radius;\n    this.x = x;\n    this.y = y;\n}\n\nfunction Point(x, y) {\n\n    this.x = x;\n    this.y = y;\n}\n\nfunction Rectangle(x, y, width, height) {\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n}\n\nfunction Segment(xa, ya, xb, yb) {\n\n    this.xa = xa;\n    this.xb = xb;\n    this.ya = ya;\n    this.yb = yb;\n}\n\n// exports current module as objects\nexport {Circle, Point, Rectangle, Segment};\n"],"sourceRoot":""}