{"version":3,"sources":["webpack:///./sources/game/scripts/systems/editor/showHitbox.js","webpack:///./sources/theatre/modules/shape.js"],"names":["showHitbox","entities","Object","entries","forEach","entity","hitboxComponent","get","positionComponent","$camera","$cameras","debug","hitbox","Rectangle","screen","x","width","scale","position","y","height","context","save","lineWidth","strokeStyle","strokeRect","restore","Point","this"],"mappings":"4OAGA,SAASA,EAAWC,GAAU,WAC5BC,OAAOC,QAAQF,GAAUG,SAAQ,YAAoB,I,IAAA,G,EAAA,E,4CAAA,I,owBAAZC,GAAY,WAE7CC,GADkBD,EAAOE,IAAI,UACXF,EAAOE,IAAI,WAC7BC,EAAoBH,EAAOE,IAAI,YAE/BE,EAAU,EAAKC,SAASC,MAExBC,EAAS,IAAIC,KAEjBJ,EAAQK,OAAOC,KAAOP,EAAkBO,EAAIT,EAAgBS,EAAKT,EAAgBU,MAAQ,GAAMP,EAAQK,OAAOG,SAAWR,EAAQS,SAASH,IAAMN,EAAQK,OAAOG,QAAUR,EAAQK,OAAOE,QAAU,GAClMP,EAAQK,OAAOK,KAAOX,EAAkBW,EAAIb,EAAgBa,EAAKb,EAAgBc,OAAS,GAAMX,EAAQK,OAAOG,SAAWR,EAAQS,SAASC,IAAMV,EAAQK,OAAOG,QAAUR,EAAQK,OAAOM,SAAW,GACpMd,EAAgBU,MAAQP,EAAQK,OAAOG,QACvCX,EAAgBc,OAASX,EAAQK,OAAOG,SAM1C,EAAKI,QAAQC,OAEb,EAAKD,QAAQE,UALC,EAOd,EAAKF,QAAQG,YAAc,UAE3B,EAAKH,QAAQI,WAAWb,EAAOG,EARhBC,EAQ4BJ,EAAOO,EARnCH,EAQ+CJ,EAAOI,MATvD,EASsEJ,EAAOQ,OAT7E,GAWd,EAAKC,QAAQK,e,2BCvBjB,SAASC,EAAMZ,EAAGI,GAEdS,KAAKb,EAAIA,EACTa,KAAKT,EAAIA,EAGb,SAASN,EAAUE,EAAGI,EAAGH,EAAOI,GAE5BQ,KAAKR,OAASA,EACdQ,KAAKZ,MAAQA,EACbY,KAAKb,EAAIA,EACTa,KAAKT,EAAIA,E","file":"7698_bundle.js","sourcesContent":["import { Rectangle } from 'modules/shape.js';\nimport { getCamera } from 'core/loadCameras';\n\nfunction showHitbox(entities) {\n  Object.entries(entities).forEach(([name, entity]) => {\n    const cameraComponent = entity.get('camera');\n    const hitboxComponent = entity.get('hitbox');\n    const positionComponent = entity.get('position');\n\n    const $camera = this.$cameras.debug;\n\n    const hitbox = new Rectangle(\n\n      $camera.screen.x() + (positionComponent.x + hitboxComponent.x - (hitboxComponent.width / 2)) * $camera.screen.scale() - ($camera.position.x() * $camera.screen.scale() - $camera.screen.width() / 2),\n      $camera.screen.y() + (positionComponent.y + hitboxComponent.y - (hitboxComponent.height / 2)) * $camera.screen.scale() - ($camera.position.y() * $camera.screen.scale() - $camera.screen.height() / 2),\n      hitboxComponent.width * $camera.screen.scale(),\n      hitboxComponent.height * $camera.screen.scale(),\n    );\n\n    const width = 2;\n    const offset = width / 2;\n\n    this.context.save();\n\n    this.context.lineWidth = width;\n\n    this.context.strokeStyle = '#639bff';\n\n    this.context.strokeRect(hitbox.x + offset, hitbox.y + offset, hitbox.width - width, hitbox.height - width);\n\n    this.context.restore();\n  });\n}\n\nexport { showHitbox };\n","function Circle(x, y, radius) {\n\n    this.radius = radius;\n    this.x = x;\n    this.y = y;\n}\n\nfunction Point(x, y) {\n\n    this.x = x;\n    this.y = y;\n}\n\nfunction Rectangle(x, y, width, height) {\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n}\n\nfunction Segment(xa, ya, xb, yb) {\n\n    this.xa = xa;\n    this.xb = xb;\n    this.ya = ya;\n    this.yb = yb;\n}\n\n// exports current module as objects\nexport {Circle, Point, Rectangle, Segment};\n"],"sourceRoot":""}