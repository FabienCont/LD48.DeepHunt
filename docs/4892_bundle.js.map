{"version":3,"sources":["webpack:///./sources/game/scripts/systems/common/forces.js","webpack:///./sources/theatre/modules/ease.js"],"names":["forces","entities","Object","entries","forEach","entity","forcesComponent","get","positionComponent","rotateComponent","trashes","parts","key","force","unlimited","ending","remaining","duration","elapsed","delta","progress","source","easing","scripts","snippets","scope","name","Ease","moved","x","y","z","rotateX","rotateY","rotateZ","handling","push","indexOf","trashKey","i","easeIn","power","easeOut","linear","factor","easeInQuad","easeInQuart","easeOutQuad","easeOutCubic","easeOutExpo"],"mappings":"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","file":"4892_bundle.js","sourcesContent":["import * as Ease from 'modules/ease.js';\n\nfunction forces(entities) {\n  Object.entries(entities).forEach(([name, entity]) => {\n    const forcesComponent = entity.get('forces');\n    const positionComponent = entity.get('position');\n    const rotateComponent = entity.get('rotate');\n\n    const trashes = [];\n\n    Object.entries(forcesComponent.parts).forEach(([key, force]) => {\n      const unlimited = force.ending === false;\n      const remaining = force.duration - force.elapsed;\n      const delta = (unlimited === false && this.delta > remaining) ? remaining : this.delta;\n\n      const progress = (force.elapsed + delta) / force.duration;\n\n      const source = force.easing;\n      const easing = (force.easing !== false ? this.scripts.snippets[source.scope][source.name]() : Ease.linear(1));\n\n      const moved = {\n\n        x: force.x * easing(progress),\n        y: force.y * easing(progress),\n        z: force.z * easing(progress),\n        rotateX: force.rotateX * easing(progress),\n        rotateY: force.rotateY * easing(progress),\n        rotateZ: force.rotateZ * easing(progress),\n      };\n\n      positionComponent.x += moved.x - force.moved.x;\n      positionComponent.y += moved.y - force.moved.y;\n      positionComponent.z += moved.z - force.moved.z;\n      if (rotateComponent) {\n        rotateComponent.x += moved.rotateX - force.moved.rotateX;\n        rotateComponent.y += moved.rotateY - force.moved.rotateY;\n        rotateComponent.z += moved.rotateZ - force.moved.rotateZ;\n      }\n\n      force.moved = moved;\n\n      force.elapsed += this.delta;\n      if (force.handling !== false) {\n        const source = force.handling;\n        const handling = this.scripts.snippets[source.scope][source.name];\n\n        const remove = () => {\n          trashes.push(key);\n        };\n\n        handling(entity, force.moved.x, force.moved.y, force.moved.z, force.moved.rotateX, force.moved.rotateY, force.moved.rotateZ, force.elapsed, remove);\n      }\n\n      if (force.elapsed >= force.duration\n            && force.ending !== false\n            && trashes.indexOf(key) === -1) {\n        const source = force.ending;\n        const ending = this.scripts.snippets[source.scope][source.name];\n\n        ending(entity, force.moved.x, force.moved.y, force.moved.z, force.moved.rotateX, force.moved.rotateY, force.moved.rotateZ, force.elapsed);\n        trashes.push(key);\n      }\n    });\n    trashes.forEach((trashKey, i) => {\n      delete forcesComponent.parts[trashKey];\n    });\n  });\n}\n\nexport { forces };\n","function easeIn(power) {\n  // accelerating from zero velocity\n  return (x) => x ** power;\n}\n\nfunction easeInFollow(power) {\n  // accelerating from zero velocity, then follow constant velocity\n  return (x) => {\n    if (x <= 1) {\n      return easeIn(power)(x);\n    }\n\n    return 1 - linear(power)(1 - x);\n  };\n}\n\nfunction easeInOut(power) {\n  // acceleration until halfway, then deceleration (with x in [0, 1] range)\n  return (x) => {\n    if (x < 0.5) {\n      return easeIn(power)(2 * x) / 2;\n    }\n\n    return 1 - easeInOut(power)(1 - x);\n  };\n}\n\nfunction easeOut(power) {\n  // decelerating to zero velocity (with x in [0, 1] range)\n  return (x) => 1 - easeIn(power)(1 - x);\n}\n\nfunction linear(factor) {\n  // linear progression\n  return (x) => x * factor;\n}\n\nfunction easeInQuad(x) {\n  // accelerating from zero velocity\n  return easeIn(2)(x);\n}\n\nfunction easeInQuadFollow(x) {\n  // accelerating from zero velocity, then follow constant velocity\n  return easeInFollow(2)(x);\n}\n\nfunction easeInCubic(x) {\n  // accelerating from zero velocity\n  return easeIn(3)(x);\n}\n\nfunction easeInCubicFollow(x) {\n  // accelerating from zero velocity, then follow constant velocity\n  return easeInFollow(3)(x);\n}\n\nfunction easeInQuart(x) {\n  // accelerating from zero velocity\n  return easeIn(4)(x);\n}\n\nfunction easeInQuartFollow(x) {\n  // accelerating from zero velocity, then follow constant velocity\n  return easeInFollow(4)(x);\n}\n\nfunction easeInOutQuad(x) {\n  // acceleration until halfway, then deceleration (with x in [0, 1] range)\n  return easeInOut(2)(x);\n}\n\nfunction easeInOutCubic(x) {\n  // acceleration until halfway, then deceleration (with x in [0, 1] range)\n  return easeInOut(3)(x);\n}\n\nfunction easeInOutQuart(x) {\n  // acceleration until halfway, then deceleration (with x in [0, 1] range)\n  return easeInOut(4)(x);\n}\n\nfunction easeOutQuad(x) {\n  // decelerating to zero velocity (with x in [0, 1] range)\n  return easeOut(2)(x);\n}\n\nfunction easeOutCubic(x) {\n  // decelerating to zero velocity (with x in [0, 1] range)\n  return easeOut(3)(x);\n}\n\nfunction easeOutQuart(x) {\n  // decelerating to zero velocity (with x in [0, 1] range)\n  return easeOut(4)(x);\n}\n\nfunction easeOutExpo(x) {\n  return x === 1 ? 1 : 1 - 2 ** (-10 * x);\n}\n\nfunction reverse(handler) {\n  // reversing easing function\n  return (x) => handler(1 - x);\n}\n\n// exports current module as functions\nexport {\n\n  // export ease function creators\n  easeIn, easeInOut, easeOut, linear,\n\n  // export ease-in functions\n  easeInCubic, easeInQuad, easeInQuart,\n\n  // ease in with constant value after max duration\n  easeInQuadFollow, easeInCubicFollow, easeInQuartFollow,\n\n  // export ease-in-out functions\n  easeInOutCubic, easeInOutQuad, easeInOutQuart,\n\n  // export ease-out functions\n  easeOutCubic, easeOutQuad, easeOutQuart,\n\n  easeOutExpo,\n  // export utility functions\n  reverse,\n};\n"],"sourceRoot":""}