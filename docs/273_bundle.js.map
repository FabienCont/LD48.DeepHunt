{"version":3,"sources":["webpack:///./sources/game/scripts/systems/canvas2d/renderImages.js"],"names":["getPattern","spriteName","this","$variables","cache","dicoPattern","drawPattern","context","img","scale","offset","shift","sx","sy","sLargeur","sHauteur","dx","dy","dLargeur","dHauteur","pattern","call","temp","canvas","document","createElement","width","height","setAttribute","style","imageRendering","getContext","imageSmoothingEnabled","setTransform","drawImage","createPattern","fillStyle","translate","Math","abs","left","top","x","y","fillRect","renderImages","Object","values","$cameras","forEach","camera","images","getDico","sort","a","b","destination","z","screen","opacity","image","frame","source","rotate","isVisible","visible","opacityGlobal","alpha","globalAlpha","position","min","right","max","bottom","dstX","dstY","dstWidth","dstHeight","PI","cos"],"mappings":"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","file":"273_bundle.js","sourcesContent":["const ratio =  1;\n\nconst getPattern = function getPattern(spriteName) {\n  if (this.$variables.cache && this.$variables.cache.dicoPattern) {\n    return this.$variables.cache.dicoPattern[spriteName] ? this.$variables.cache.dicoPattern[spriteName] : null;\n  }\n  return null;\n};\nconst savePattern = function savePattern(spriteName, pattern) {\n  if (this.$variables.cache) {\n    if (!this.$variables.cache.dicoPattern) {\n      this.$variables.cache.dicoPattern = {};\n    }\n    this.$variables.cache.dicoPattern[spriteName] = pattern;\n  }\n};\n\nconst createPattern = function createPattern(img, scale, offset, shift, sx, sy, sLargeur, sHauteur) {\n  const temp = {\n    canvas: document.createElement('canvas'),\n  };\n\n  temp.canvas.width = sLargeur *scale*ratio;\n  temp.canvas.height = sHauteur* scale*ratio;\n\n  temp.canvas.setAttribute('height',  ratio*temp.canvas.height);\n  temp.canvas.setAttribute('width',  ratio*temp.canvas.width);\n\n  temp.canvas.style.height = '100%';\n  temp.canvas.style.width = '100%';\n  temp.canvas.style.imageRendering = '-moz-crisp-edges';\n  temp.canvas.style.imageRendering = '-webkit-crisp-edges';\n  temp.canvas.style.imageRendering = 'crisp-edges';\n  temp.canvas.style.imageRendering = 'pixelated';\n  temp.context = temp.canvas.getContext('2d');\n  temp.context.imageSmoothingEnabled = false;\n  temp.context.setTransform(ratio, 0, 0, ratio, 0, 0);\n\nlet dx= (sLargeur *scale);\nlet dy= (sHauteur *scale);\n  if (temp.canvas.width > 0 && temp.canvas.height > 0) {\n    temp.context.drawImage(img, sx, sy, sLargeur, sHauteur, 0, 0, dx, dy);\n    return temp.context.createPattern(temp.canvas, 'repeat');\n  }\n  return null;\n};\n\nconst drawPattern = function drawPattern(spriteName, context, img, scale, offset, shift, sx, sy, sLargeur, sHauteur, dx, dy, dLargeur, dHauteur) {\n  let pattern = null;\n  const savedPattern = getPattern.call(this, spriteName);\n  if (savedPattern) {\n    pattern = savedPattern;\n  } else {\n    pattern = createPattern(img, scale, offset, shift, sx, sy, sLargeur, sHauteur);\n  //  if (pattern)savePattern.call(this, spriteName, pattern);\n  }\n\n  if (pattern) {\n    context.fillStyle = pattern;\n\n    context.translate(-dLargeur / 2, -dHauteur / 2);\n    context.translate(-Math.abs(offset.left), -Math.abs(offset.top));\n    context.translate(shift.x, shift.y);\n\n    context.fillRect(-shift.x + Math.abs(offset.left), -shift.y + Math.abs(offset.top), dLargeur, dHauteur);\n\n    context.fillStyle = '#000000';\n  }\n};\n\nconst renderImages = function renderImages() {\n  /* eslint prefer-destructuring: [\"error\", {VariableDeclarator: {object: false}}] */\n  const context = this.context;\n  Object.values(this.$cameras).forEach((camera) => {\n    let { images } = camera.getDico();\n\n    if (images) {\n      const sortImages = (a, b) => a.destination.z - b.destination.z;\n\n      images = images.sort(sortImages);\n\n      if (camera.screen.opacity === 0) {\n        return;\n      }\n\n      images.forEach((image) => {\n        const {\n          shift, destination, frame, opacity, source, rotate, spriteName,\n        } = image;\n\n        const isVisible = camera.visible(\n\n          destination.x * camera.screen.scale(),\n          destination.y * camera.screen.scale(),\n          destination.width * camera.screen.scale(),\n          destination.height * camera.screen.scale(),\n        );\n\n        const opacityGlobal = opacity * camera.screen.opacity;\n\n        if (opacityGlobal > 0\n            && isVisible === true) {\n          const alpha = context.globalAlpha;\n\n          context.globalAlpha = opacityGlobal;\n\n          const FIELD_OF_VIEW = camera.screen.width() * 1;\n          const PROJECTION_CENTER_X = camera.screen.width() / 2; // X center of the canvas HTML\n          const PROJECTION_CENTER_Y = camera.screen.height() / 2; // Y center of the canvas HTML\n          // const sizeProjection = FIELD_OF_VIEW / (FIELD_OF_VIEW + destination.z);\n          const sizeProjection = FIELD_OF_VIEW / (FIELD_OF_VIEW + camera.position.z());\n          // const xProject = (x * sizeProjection) + PROJECTION_CENTER_X;\n          // const yProject = (y * sizeProjection) + PROJECTION_CENTER_X;\n\n          const canvas = {\n\n            destination: {\n\n              x: camera.screen.x() + destination.x * camera.screen.scale()\n            - (camera.position.x() * camera.screen.scale()\n            - camera.screen.width() / 2),\n              y: camera.screen.y() + destination.y * camera.screen.scale()\n            - (camera.position.y() * camera.screen.scale()\n            - camera.screen.height() / 2),\n              width: destination.width * camera.screen.scale(),\n              height: destination.height * camera.screen.scale(),\n            },\n          };\n\n          const offset = {\n            top: Math.min(0, canvas.destination.y - camera.screen.y()),\n            right: Math.max(0, canvas.destination.x + canvas.destination.width\n            - (camera.screen.x() + camera.screen.width())),\n            bottom: Math.max(0, canvas.destination.y + canvas.destination.height\n            - (camera.screen.y() + camera.screen.height())),\n            left: Math.min(0, canvas.destination.x - camera.screen.x()),\n          };\n\n          const dstX = canvas.destination.x - offset.left;\n          const dstY = canvas.destination.y - offset.top;\n          const dstWidth = canvas.destination.width - offset.right - Math.abs(offset.left);\n          const dstHeight = canvas.destination.height - offset.bottom - Math.abs(offset.top);\n\n          context.setTransform(ratio, 0, 0, ratio, 0, 0);\n          context.translate(dstX + (dstWidth / 2),\n            dstY + (dstHeight / 2));\n          context.rotate((rotate.z * Math.PI) / 180);\n          context.scale(1, Math.cos((rotate.x * Math.PI) / 180));\n          context.scale(Math.cos((rotate.y * Math.PI) / 180), 1);\n\n          if (destination.width === frame.width && destination.height === frame.height && shift.x === 0 && shift.y === 0) {\n            context.drawImage(\n              source,\n              frame.x - offset.left * (frame.width / canvas.destination.width),\n              frame.y - offset.top * (frame.height / canvas.destination.height),\n              frame.width - offset.right * (frame.width / canvas.destination.width)\n            - Math.abs(offset.left * (frame.width / canvas.destination.width)),\n              frame.height - offset.bottom * (frame.height / canvas.destination.height)\n            - Math.abs(offset.top * (frame.height / canvas.destination.height)),\n              -dstWidth / 2,\n              -dstHeight / 2,\n              dstWidth,\n              dstHeight,\n            );\n          } else {\n            drawPattern.call(this, spriteName,\n              context,\n              source,\n              camera.screen.scale(),\n              offset,\n              shift,\n              frame.x,\n              frame.y,\n              frame.width,\n              frame.height,\n              -dstWidth / 2,\n              -dstHeight / 2,\n              dstWidth,\n              dstHeight);\n          }\n          context.globalAlpha = alpha;\n        }\n      });\n    }\n  });\n\n  context.setTransform(ratio, 0, 0, ratio, 0, 0);\n};\n\nexport { renderImages };\n"],"sourceRoot":""}