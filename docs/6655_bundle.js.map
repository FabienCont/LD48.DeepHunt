{"version":3,"sources":["webpack:///./sources/game/scripts/systems/editor/images.js"],"names":["images","entities","Object","values","forEach","entity","cameraComponent","get","imagesComponent","positionComponent","rotateComponent","rotateX","rotateY","rotateZ","x","y","z","parts","image","sourceImage","opacity","source","destination","assets","scope","file","shift","size","width","naturalWidth","height","naturalHeight","$cameras","debug","add","spriteName","rotate","frame","err"],"mappings":"oFAAA,SAASA,EAAOC,GAAU,WACxBC,OAAOC,OAAOF,GAAUG,SAAQ,SAACC,GAC/B,IAAMC,EAAkBD,EAAOE,IAAI,UAC7BC,EAAkBH,EAAOE,IAAI,UAC7BE,EAAoBJ,EAAOE,IAAI,YAC/BG,EAAkBL,EAAOE,IAAI,UAE/BI,EAAU,EACVC,EAAU,EACVC,EAAU,EACVH,IACFC,EAAUD,EAAgBI,EAC1BF,EAAUF,EAAgBK,EAC1BF,EAAUH,EAAgBM,GAE5Bd,OAAOC,OAAOK,EAAgBS,OAAOb,SAAQ,SAACc,GAC5C,IAAI,IAKEC,EAHFC,EACEF,EADFE,QAASC,EACPH,EADOG,OAKLC,EAAcJ,EAAMI,aAAe,CACvCR,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAGjBG,EAAc,EAAKI,OAAOvB,OAAOqB,EAAOG,OAAOH,EAAOI,QAEtD,IAAMC,EAAQR,EAAMQ,OAAS,CAC3BZ,EAAG,EAAGC,EAAG,GAGLY,EAAOT,EAAMS,MAAQ,CACzBC,MAAOT,EAAYU,aAAcC,OAAQX,EAAYY,eAGvD,EAAKC,SAASC,MAAMC,IAAI,SAAU,CAChCC,WAAY,QAAF,OAAUd,EAAOG,OAAjB,OAAyBH,EAAOI,MAC1CW,OAAQ,CACNtB,EAAGH,EACHI,EAAGH,EACHI,EAAGH,GAELQ,OAAQF,EACRkB,MAAO,CACLvB,EAAG,EACHC,EAAG,EACHa,MAAOT,EAAYU,aACnBC,OAAQX,EAAYY,eAEtBL,MAAO,CACLZ,EAAGY,EAAMZ,EACTC,EAAGW,EAAMX,GAEXO,YAAa,CACXR,EAAIL,EAAkBK,EAAIQ,EAAYR,EAAIa,EAAKC,MAAQ,EACvDb,EAAIN,EAAkBM,EAAIO,EAAYP,EAAIY,EAAKG,OAAS,EACxDd,EAAGP,EAAkBO,EAAIM,EAAYN,EACrCY,MAAQD,EAAKC,MACbE,OAASH,EAAKG,QAEhBV,QAASd,EAAgBc,QAAUA,IAErC,MAAOkB,W","file":"6655_bundle.js","sourcesContent":["function images(entities) {\n  Object.values(entities).forEach((entity) => {\n    const cameraComponent = entity.get('camera');\n    const imagesComponent = entity.get('images');\n    const positionComponent = entity.get('position');\n    const rotateComponent = entity.get('rotate');\n\n    let rotateX = 0;\n    let rotateY = 0;\n    let rotateZ = 0;\n    if (rotateComponent) {\n      rotateX = rotateComponent.x;\n      rotateY = rotateComponent.y;\n      rotateZ = rotateComponent.z;\n    }\n    Object.values(imagesComponent.parts).forEach((image) => {\n      try {\n        const {\n          opacity, source,\n        } = image;\n\n        let sourceImage = '';\n\n        const destination = image.destination || {\n          x: 0, y: 0, z: 0,\n        };\n\n        sourceImage = this.assets.images[source.scope][source.file]();\n\n        const shift = image.shift || {\n          x: 0, y: 0,\n        };\n\n        const size = image.size || {\n          width: sourceImage.naturalWidth, height: sourceImage.naturalHeight,\n        };\n\n        this.$cameras.debug.add('images', {\n          spriteName: `_img_${source.scope}${source.file}`,\n          rotate: {\n            x: rotateX,\n            y: rotateY,\n            z: rotateZ,\n          },\n          source: sourceImage,\n          frame: {\n            x: 0,\n            y: 0,\n            width: sourceImage.naturalWidth,\n            height: sourceImage.naturalHeight,\n          },\n          shift: {\n            x: shift.x,\n            y: shift.y,\n          },\n          destination: {\n            x: (positionComponent.x + destination.x - size.width / 2),\n            y: (positionComponent.y + destination.y - size.height / 2),\n            z: positionComponent.z + destination.z,\n            width: (size.width),\n            height: (size.height),\n          },\n          opacity: cameraComponent.opacity * opacity,\n        });\n      } catch (err) {\n\n      }\n    });\n  });\n}\n\nexport { images };\n"],"sourceRoot":""}